version: 0.2

env:
  variables:
    BUILD_LOG_APP_NAME: nago-app-container
    BUILD_LOG_API_NAME: nago-api-container
    RUNTIME_DOCKER_VERSION: 18
    DOCKER_BUILDKIT: "1"

phases:
  install:
    runtime-versions:
      docker: ${RUNTIME_DOCKER_VERSION}
    commands:
      # ecs-deployのインストール
      - yum install -y jq which
      - curl -OL https://raw.githubusercontent.com/silinternational/ecs-deploy/master/ecs-deploy
      - chmod +x ecs-deploy
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com
      - echo ${DOCKER_HUB_MY_ACCESS_TOKEN} | docker login -u ${DOCKER_HUB_LOGIN_USER} --password-stdin
      - REPOSITORY_APP_URI=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${REPOSITORY_APP_NAME}
      - REPOSITORY_API_URI=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${REPOSITORY_API_NAME}
      - (cd front && yarn install)
  build:
    commands:
      - echo Build nago_app started on `date`
      - (cd front && yarn build)
      - docker build -f ./etc/nginx/docker/prod/Dockerfile -t ${REPOSITORY_APP_URI}:latest .
      - echo Build nago_api started on `date`
      - docker build -f ./backend/docker/prod/Dockerfile -t ${REPOSITORY_API_URI}:latest ./backend
  post_build:
    commands:
      - echo Build complete on `date`
      - docker push ${REPOSITORY_APP_URI}:latest
      - docker push ${REPOSITORY_API_URI}:latest
      - printf '[{"name":"%s", "imageUri":"%s"},{"name":"%s","imageUri":"%s"}]' "${BUILD_LOG_APP_NAME}" "${REPOSITORY_APP_URI}:latest" "${BUILD_LOG_API_NAME}" "${REPOSITORY_API_URI}:latest" > imagedefinitions.json
      # ECSへのデプロイ
      - ./ecs-deploy -c ${ECS_CLUSTER_NAME} -n ${ECS_SERVICE_NAME} -i ${REPOSITORY_APP_URI}:latest -t 1200
      - ./ecs-deploy -c ${ECS_CLUSTER_NAME} -n ${ECS_SERVICE_NAME} -i ${REPOSITORY_API_URI}:latest -t 1200

artifacts:
  files:
    - imagedefinitions.json
