version: 0.2

env:
  variables:
    REPOSITORY_APP_NAME: nginx
    CONTAINER_APP_NAME: nago-app-container
    REPOSITORY_API_NAME: api
    CONTAINER_API_NAME: nago-api-container

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com
      - REPOSITORY_APP_URI=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${REPOSITORY_APP_NAME}
      - REPOSITORY_API_URI=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${REPOSITORY_API_NAME}
      - (cd front && yarn install)
  build:
    commands:
      - echo Build nago_app started on `date`
      - (cd front && yarn build)
      - docker build -f etc/nginx/docker/prod/Dockerfile -t ${REPOSITORY_APP_URI} .
      - echo Build nago_api started on `date`
      - docker build -f backend/docker/prod/Dockerfile -t ${REPOSITORY_API_URI} ./backend
  post_build:
    commands:
      - echo Build complete on `date`
      - docker push ${REPOSITORY_APP_URI}:latest
      - docker push ${REPOSITORY_API_URI}:latest
      - printf '[{"name":"%s", "imageUri":"%s"},{"name":"%s","imageUri":"%s"}]' "${CONTAINER_APP_NAME}" "${REPOSITORY_APP_URI}:latest" "${CONTAINER_API_NAME}" "${REPOSITORY_API_URI}:latest" > imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
